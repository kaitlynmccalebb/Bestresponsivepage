body {
	width: 100%;
	height: 100%;
	margin: 0;
	display: flex;
}

.wide-col {
	width: 65%;
	height: 100%;
	display: flex;
}

.narrow-col {
	display: block;
	width: 35%;
}

.box {
	height: calc(100%/2);
}

.blue {background-color: #0D11A8;}
.red {background-color: #F50F0F;}
.yellow {background-color: #FAE317;}


/* https://philipwalton.github.io/solved-by-flexbox/demos/vertical-centering/ */
/* If you're using 'display: flex' this class can be used to easily center horizontally! */
.center-horizontal {
	align-items: center;
	
}

/* If you're using 'display: flex' this class can be used to easily center vertically! */
.center-vertical {
	justify-content: center;
}

/* Keep your image from overflowing it's parent DIV */
.contain-image {
	max-height: 50%;
	max-width: 50%;
}

/*The media inquiry is gives commands when the screen size changes how does the the content on the screen adjust to that screen size */
@media only screen and (max-width:1500px) {
	body{
		display: block;
	}
	.narrow-col {
		display: flex;
		width: 100%;
		height: 50%;
	}
	.wide-col{
		display: flex;
		width: 100%;
		height: 50%;
	}
	.box {
		width:50%;
		height: 100%;
	}
}
@media only screen and (max-width:1200px) {
	body{
		display: block;
	}
	.narrow-col {
		display: block;
		width: 100%;
		height: calc(100%/3);
	}
	.wide-col{
		display: flex;
		width: 100%;
		height: calc(2(100%/3));
	}
	.box {
		width:100%;
		height: 100%;
	}
}
@media only screen and (max-width:1000px) {
	body{
		display: flex;
	}
	.narrow-col {
		display: flex;
		width: calc(2(100%/3));
		height: 100%;
		border: 3px;
	}
	.wide-col{
		display: flex;
		width: calc(100%/3);
		height: 100%;
		border: 8px;
	}
	.box {
		width:100%;
		height: 100%;
	}
	.blue{background-color: #808080;}
	.red{background-color:	#DB7093;}
	.yellow{background-color: #808080;}
	
}